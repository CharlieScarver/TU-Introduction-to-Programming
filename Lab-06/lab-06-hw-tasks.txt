Домашното за Lab-06 за 38ма група е следното:

Бележка от миналия път:
Когато викаме конструктора на родителския клас през super(), няма нужда да му подаваме self:
super().__init__(fname, lname)
Python сам, ще направи връзката и ще свърже извикването със self.
Тоест в пдф-а има грешка за съжаление.
Ако използваме другото извикване обаче, което е направо през името на класа, трябва да подадем self:
ParentClass.__init__(self, fname, lname)
Съветвам ви винаги да използвате варианта със super() и да запомните него.

1) Напишете клас превозно средство (Vehicle), който има текстови полета марка и модел, дробни полета обем на двигателя, максимална скорост и общо изминати километри и целочислено поле максимален брой пътници.
В класа трябва да има метод print_info(), който да принтира като текст името на класа и полетата в правилен ред след него в обли скоби: "Vehicle(brand, model, engine_vol, max_speed, total_km, max_passengers)"
Напишете клас мотор (Motorbike), който наследява Vehicle и има допълнителни полета цена (дробно) и наличие на кош (булево). Обектите от клас мотор винаги имат максимален брой пътници равен на 2, тоест това поле НЕ се подава при създаване на обект от този тип.
Напишете клас лека кола (Car), който наследява Vehicle и има допълнителни полета категория (текст) и вид гориво (текст). Обектите от клас мотор винаги имат максимален брой пътници равен на 4, тоест това поле НЕ се подава при създаване на обект от този тип.
Напишете клас автобус (Bus), който наследява Vehicle има допълнителни полета поддържаща фирма (текст) и година на производство (цяло число). Автобусите могат да имат различен максимален брой пътници, тоест това поле ЩЕ се подава при създаване на обекти от този тип. 

2) Напишете клас животно (Animal), който има полета дадено име (текст), години (цяло число), вид храна (текст).
Класът трябва да има и празни методи make_sound() и eat_food().
Напишете класове котка (Cat), куче (Dog), пате (Duck) и кон (Horse), които наследяват Animal.
Всеки клас трябва да презапише make_sound() и вътре да принтира съответния звук, който това животно издава (make_sound() на котката трябва да изписва "Meow!" и така за всички животни). 
Също така всеки клас трябва да имплементира и eat_food(), който приема колко количество от храната за това животно имаме налична. Методът връща число - колко храна от този тип ни остава налична след като животното се е нахранило. Вътрешно методите имат различна логика за всеки клас:
 - Котката винаги яде по 10 храна и връща числото оставаща храна. Ако няма достатъчно храна, за да се наяде, изяжда колкото има и извиква make_sound() два пъти и връща нула. Ако наличната храна е нула по начало, вика make_sound() четири пъти.
 - Кучето винаги яде колкото му кажат. За него методът приема допълнителен аргумент eat_quantity, който има стойност по подразбиране 5. Кучето ще изяде колкото е стойността на аргумента и ще върне останалото.
 - Патето винаги първо извиква make_sound() и после яде. Количеството, което яде е различно всеки път - случайно генерирано число от 1 до 9.
 - Конят яде по 15, но ако храната, която остава няма да му стигне за следващото ядене, яде по 8.
Всички останали освен котката, ако нямат достатъчно храна да се наядат напълно изяждат колкото има връщат 0.

Направете списък с 10 различни животни.
Направете речник с 4 различни вида храна (текст) като ключове и стойности наличното количество от тях.
Направете цикъл, който 10 пъти подред храни всяко от животните от списъка. На всяка итерация от цикъла се извиква eat_food() метода на съответното животно и му се подава количеството налична храна от речника според неговите предпочитания (полето вид храна). Също така на всяка итерация се очаква да се принтира следното:
"{име на животното} the {класа животно} just ate {колко храна е изяло} {вид храна}, there's {колко храна остава} left"
За класа на животното може да използвате type(animal).__name__

В началото на всяко обхождане на списъка от животни се принтира разделител "======="

Отдолу ще сложа снимка с примерен изход на програмата само с две животни - котка и куче - и две храни - риба, от която има 70 и кучешка храна, от която има 50. 
Ако са повече не мога да го събера на един екран, но то няма и нужда понеже работи еднакво и за 10.


