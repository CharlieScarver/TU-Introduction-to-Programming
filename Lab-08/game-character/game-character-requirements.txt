Напишете програма, която създава позволява създаването на нов герой и неговата екипировка в игра.
Програмата има меню с команди. Потребителят избира коя команда да се изпълни като въвежда нейния номер от списъка.
Командата се изпълнява и след това менюто се показва отново. 
Това продължава докато потребителят не избере командата Exit, която е последна.
Ако потребителят избере невалиден номер, се хвърля грешка InvalidCommand, която вие трябва дефинирате.
Всички дефинирани грешки стоят в отделен модул errors.

Командите могат да изискват различни параметри да бъдат въведени от потребителя.
Трябва да се изкара съобщение на потребителя да въведе определеният параметър като има кратко обощение какъв е формата.
Например, ако примерна команда изисква да се въведе ЕГН би изписала: "Enter EGN number (len 10, digits-only): "
След въвеждането на всеки допълнителен параметър трябва да има валидация и проверка дали изискванията са покрити.
Ако не са, се хвърля грешка InvalidDataFormat, която вие трябва да дефинирате.

Основната логика на менюто седи в основния модул на програмата main.py
Това е файлът, който ще стартираме.
В него трябва да има клас Menu, който да има по един метод за всяка команда, един метод print_commands(), 
който да принтира менюто с команди и един метод run(), в който е основният цикъл на програмата.
Класът трябва да запазва в себе си създадените в програмата герои.

Програмата ще създава нов герой/аватар в игра.
Всеки герой има име, пол, клас в играта, основно оръжие, допълнителен предмет.
Всяко оръжие Е ВИД ПРЕДМЕТ, който има поле за това колко точки атака има оръжието (attack).
Всеки предмет има име и издръжливост (durability).

Имената на героите трябва да са уникални. Ако за име на нов герой се въведе вече съществуващо име, се хвърля грешка CharacterExists.
Всички стринг полета трябва да са поне 4 символа дълги и да съдържат само букви.
Изключение е името на героя, което може да съдържа и букви и цифри.
Полето клас на героя трябва да бъде една от стойностите Warrior, Mage, Priest, Rogue. 
Всеки герой започва с празни полетата за оръжие и допълнителен предмет (None).
Ако не е, се хвърля грешка InvalidCharacterClass.
Полето attack трябва да е положително цяло число.
Всички предмети започват с durability = 100.

Всички класове (без Menu и Exception класовете) трябва са в ПАКЕТ entities и в собствен ПОДМОДУЛ на пакета, който да е с името на класа (показахме го в клас).
Също така трябва да имат print() метод, който ВРЪЩА стринг.
Този стринг има същия формат както print методите, които сме писали досега - класа(поле, поле)
Когато героя се принтира на мястото на weapon полето му ще отиде резултатът от weapon.print().
По същият начин ще стане и за допълнителния предмет.

Командите в менюто на програмата са:
- създаване на нов герой
- създаване на оръжие на вече съществуващ герой
- създаване на допълнителен предмет на вече съществуващ герой
- принтиране на всички герои
- изтриване на съществуващ герой

Командите, които изискват съществуващ герой, искат от потребителя да въведе името на героя, за който ще бъде изпълнена командата.
Ако герой с такова име не съществува, се хвърля грешка CharacterNotFound.

Всички хвърлени от командите грешки се прихващат заедно и се принтира съобщението на грешката по следния начин: "Error: {message}".
Това не прекратява цикъла на цялото меню, а само на командата. 
Тоест след прихващане и принтиране на грешка менюто продължава да функционира - принтира командите и очаква избор.
